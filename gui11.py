
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import sqlite3
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/Users/chanpanha/Desktop/survey/build/assets/frame11")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1366x768")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 768,
    width = 1366,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    694.9102783203125,
    78.0,
    image=image_image_1
)

canvas.create_text(
    178.0,
    132.0,
    anchor="nw",
    text="Patient’s Name*",
    fill="#000000",
    font=("Inter", 24 * -1)
)

canvas.create_text(
    178.0,
    273.0,
    anchor="nw",
    text="Appointment’s ID *",
    fill="#000000",
    font=("Inter", 24 * -1)
)

canvas.create_text(
    211.0,
    414.0,
    anchor="nw",
    text="Reason *",
    fill="#000000",
    font=("Inter", 24 * -1)
)

canvas.create_text(
    178.0,
    535.0,
    anchor="nw",
    text="Are you sure? Once you cancel the appointment, you can’t go back*. Enter Yes or NO",
    fill="#000000",
    font=("Inter", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    739.0,
    203.0,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=212.0,
    y=169.0,
    width=1054.0,
    height=66.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    731.0,
    346.0,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=196.0,
    y=312.0,
    width=1070.0,
    height=66.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    731.0,
    487.0,
    image=entry_image_3
)
entry_3 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=196.0,
    y=453.0,
    width=1070.0,
    height=66.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    732.5,
    606.0,
    image=entry_image_4
)
entry_4 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=199.0,
    y=572.0,
    width=1067.0,
    height=66.0
)
def gui1():
    window.destroy()
    import build.home as home
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=gui1,
    relief="flat"
)
button_1.place(
    x=563.0,
    y=677.0,
    width=373.0,
    height=76.0
)

def delete_appointment_info():
    try:
        conn = sqlite3.connect("add_appointment.db")
        cursor = conn.cursor()

        # Assuming entry_1 holds the Appointment ID. Change if needed.
        appointment_id = entry_2.get("1.0", "end-1c").strip() 

        if appointment_id:  # Check if appointment_id is not empty
            cursor.execute("DELETE FROM add_appointment_info WHERE app_id = ?", (appointment_id,))  # Assuming you have an 'id' column as primary key
            conn.commit()  # Commit changes to make the deletion permanent
            if cursor.rowcount > 0:
                messagebox.showinfo("Success", "Appointment information deleted successfully!")
            else:
                messagebox.showinfo("Not Found", "No appointment with that ID found.")
        else:
            messagebox.showerror("Error", "Please enter an Appointment ID.")

        conn.close()

    except sqlite3.Error as e:
        print(f"Error deleting data: {e}")
        messagebox.showerror("Error", f"Database error: {e}") 

button_1.config(command=delete_appointment_info)  

window.resizable(False, False)
window.mainloop()
