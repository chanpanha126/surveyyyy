
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import sys
import sqlite3 
sys.path.append(r"/Users/chanpanha/Desktop/Survey/build/home.py")  


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/Users/chanpanha/Desktop/Survey/build/assets/frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def open_home():
    window.destroy()  # Close the current window
    import build.gui14 as gui14
    gui14.create_home_window()


window = Tk()

window.geometry("1366x768")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 768,
    width = 1366,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)
def gui3():
    window.destroy()
    import gui3
canvas.place(x = 0, y = 0)
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=gui3,
    relief="flat"
)
def gui4():
    window.destroy()
    import gui4
button_1.place(
    x=142.0,
    y=13.0,
    width=319.68353271484375,
    height=45.05301284790039
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=gui4,
    relief="flat"
)
button_2.place(
    x=939.0,
    y=25.0,
    width=330.0,
    height=41.318992614746094
)
def gui1():
    window.destroy()
button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=gui1,
    relief="flat"
)
button_3.place(
    x=566.0,
    y=671.0,
    width=243.76502990722656,
    height=59.80250549316406
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    356.0268249511719,
    203.02124786376953,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=55.0,
    y=171.0,
    width=602.0536499023438,
    height=62.04249572753906
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    1010.88671875,
    202.1873779296875,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=712.88671875,
    y=171.1873779296875,
    width=596.0,
    height=60.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    681.4601440429688,
    328.3306827545166,
    image=entry_image_3
)
entry_3 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=57.5185546875,
    y=297.152587890625,
    width=1247.8831787109375,
    height=60.3561897277832
)

canvas.create_text(
    57.0693359375,
    125.109619140625,
    anchor="nw",
    text="Doctor ID",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

canvas.create_text(
    707.693359375,
    125.109619140625,
    anchor="nw",
    text="Name",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

canvas.create_text(
    54.6640625,
    252.8564453125,
    anchor="nw",
    text="Specialization",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

canvas.create_rectangle(
    224.88671875,
    555.1873779296875,
    1214.88671875,
    555.1873779296875,
    fill="#000000",
    outline="")

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    1010.5505065917969,
    580.0092716217041,
    image=entry_image_4
)
entry_4 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=712.8466796875,
    y=548.8311767578125,
    width=595.4076538085938,
    height=60.3561897277832
)

entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    352.3678894042969,
    580.0092716217041,
    image=entry_image_5
)
entry_5 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_5.place(
    x=54.6640625,
    y=548.8311767578125,
    width=595.4076538085938,
    height=60.3561897277832
)

canvas.create_text(
    59.419921875,
    512.769775390625,
    anchor="nw",
    text="Email Address",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

canvas.create_rectangle(
    79.3779296875,
    561.2667236328125,
    112.99372863769531,
    599.6362838745117,
    fill="#000000",
    outline="")

canvas.create_text(
    708.474609375,
    495.4903564453125,
    anchor="nw",
    text="Phone Number",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

canvas.create_rectangle(
    733.685546875,
    561.2667236328125,
    767.3013458251953,
    599.6362838745117,
    fill="#000000",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    700.6328125,
    29.0,
    image=image_image_1
)

canvas.create_text(
    58.88671875,
    389.1873779296875,
    anchor="nw",
    text="Available Date:",
    fill="#384D6C",
    font=("MontserratRoman Bold", 16 * -1)
)

entry_image_6 = PhotoImage(
    file=relative_to_assets("entry_6.png"))
entry_bg_6 = canvas.create_image(
    684.38671875,
    445.1873779296875,
    image=entry_image_6
)
entry_6 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_6.place(
    x=59.88671875,
    y=414.1873779296875,
    width=1249.0,
    height=60.0
)
def create_database():
    try:
        conn = sqlite3.connect("doctor_info.db")
        cursor = conn.cursor()

        cursor.execute('''
            CREATE TABLE IF NOT EXISTS dr_info (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                doctor_id TEXT,
                name TEXT,
                specialization TEXT,
                available_date TEXT,
                email_address TEXT,
                phone_number TEXT
            )
        ''')
        conn.commit()
        conn.close()
        print("Database and table created successfully!")
    except sqlite3.Error as e:
        print(f"Error creating database or table: {e}")

def create_database():
    try:
        conn = sqlite3.connect("doctor_info.db")
        cursor = conn.cursor()

        cursor.execute('''
            CREATE TABLE IF NOT EXISTS dr_info (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                doctor_id TEXT,
                name TEXT,
                specialization TEXT,
                available_date TEXT,
                email_address TEXT,
                phone_number TEXT
            )
        ''')
        conn.commit()
        conn.close()
        print("Database and table created successfully!")
    except sqlite3.Error as e:
        print(f"Error creating database or table: {e}")

# Call the function to create database and table upon running the script
create_database()

# Modified open_home function
def open_home():
    try:
        conn = sqlite3.connect("doctor_info.db")
        cursor = conn.cursor()

        # Get data from the entry widgets (Explicitly convert to strings)
        doctor_id = str(entry_1.get("1.0", "end-1c"))
        name = str(entry_2.get("1.0", "end-1c"))
        specialization = str(entry_3.get("1.0", "end-1c"))
        available_date = str(entry_6.get("1.0", "end-1c")) 
        email_address = str(entry_5.get("1.0", "end-1c"))
        phone_number = str(entry_4.get("1.0", "end-1c"))

        # Insert data into the database
        cursor.execute('''
            INSERT INTO dr_info (doctor_id, name, specialization, available_date, email_address, phone_number)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', (doctor_id, name, specialization, available_date, email_address, phone_number))

        conn.commit()  # Commit the changes to the database
        conn.close()

        messagebox.showinfo("Success", "Doctor information inserted successfully!")
        
        # Destroy the current window and open gui1 (login successful)
        window.destroy()
        import build.gui14 as gui14
        gui14.create_home_window()
    except sqlite3.Error as e:
        messagebox.showerror("Error", "Failed to insert doctor information.")
button_3.config(command=open_home)
window.resizable(False, False)
window.mainloop()


